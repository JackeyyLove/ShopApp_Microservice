version: '3.9'

services:
  order-service:
    image: louisdevops/orderservice-shop-app-microservice:latest
    ports:
      - "8082:8082"
    environment:
      OTEL_SERVICE_NAME: "ORDER-SERVICE"
      OTEL_RESOURCE_ATTRIBUTES: "service=ORDER-SERVICE,env=dev"
      OTEL_TRACES_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://collector:4317"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
      DB_HOST: "micro-db"
      CONFIG_SERVER_URL: "http://config-server:9296"
    depends_on:
      - micro-db
      - config-server
      - service-registry
      - collector
    networks:
      - default

  product-service:
    image: louisdevops/productservice-shop-app-microservice:latest
    ports:
      - "8080:8080"
    environment:
      OTEL_SERVICE_NAME: "PRODUCT-SERVICE"
      OTEL_TRACES_EXPORTER: "jaeger, zipkin, otlp"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://tempo:4317"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
      DB_HOST: "micro-db"
      CONFIG_SERVER_URL: "http://config-server:9296"
    depends_on:
      - micro-db
      - config-server
      - service-registry
      - collector
    networks:
      - default

  payment-service:
    image: louisdevops/paymentservice-shop-app-microservice:latest

    ports:
      - "8081:8081"
    environment:
      OTEL_SERVICE_NAME: "PAYMENT-SERVICE"
      OTEL_TRACES_EXPORTER: "jaeger, zipkin, otlp"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "http://tempo:4317"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
      DB_HOST: "micro-db"
      CONFIG_SERVER_URL: "http://config-server:9296"
    depends_on:
      - micro-db
      - config-server
      - service-registry
      - collector
    networks:
      - default

  config-server:
    image: louisdevops/configserver-shop-app-microservice:latest

    environment:
      EUREKA_SERVICE_ADDRESS: "http://service-registry:8761/eureka"
      OTEL_SERVICE_NAME: "CONFIG-SERVER"
      OTEL_TRACES_EXPORTER: "jaeger, zipkin"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
    ports:
      - "9296:9296"
    networks:
      - default
    depends_on:
      - service-registry


  micro-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql  # Named volume for database persistence
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - default

  service-registry:
    image: louisdevops/service-registry-shop-app-microservice:latest

    environment:
      OTEL_SERVICE_NAME: "SERVICE-REGISTRY"
      OTEL_TRACES_EXPORTER: "jaeger, zipkin"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
    ports:
      - "8761:8761"
    networks:
      - default

#  collector:
#    container_name: collector
#    image: otel/opentelemetry-collector-contrib:0.91.0
#    command:
#      - --config=/etc/otelcol-contrib/otel-collector.yml
#    volumes:
#      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
#    ports:
#      - "4317" # OTLP gRPC receiver
#      - "8889" # Prometheus exporter metrics
#    depends_on:
#      - loki
#      - jaeger-all-in-one
#      - zipkin-all-in-one
#     # - tempo
#    networks:
#      - default
  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"
      - "4317"
    networks:
      - default

  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - default
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    depends_on:
      - order-service
      - product-service
      - payment-service
    networks:
      - default
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
        - "4317" # OTLP gRPC receiver
    depends_on:
      - loki

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "4317" #otlp grpc
      - "3200" #tempo as grafana datasource
networks:
  default:
    driver: bridge

volumes:
  mysql-data:
